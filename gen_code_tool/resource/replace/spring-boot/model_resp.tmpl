// code generated by gen_code_tool. DO NOT EDIT.

package com.quan.model;

import com.alibaba.fastjson2.JSONObject;
import com.quan.enums.ResponseEnum;

import lombok.NoArgsConstructor;

import java.util.HashMap;

/** 操作消息提醒 */
@NoArgsConstructor
public class Response extends HashMap<String, Object> {
    private static final long serialVersionUID = 567515956943624103L;

    public static final String ERROR_CODE = "errorCode";

    public static final String MESSAGE = "message";

    public static final String DATA = "data";

    public Response(ResponseEnum e) {
        super.put(ERROR_CODE, e.getCode());
        super.put(MESSAGE, e.getMsg());
    }

    public Response(String code, String msg) {
        super.put(ERROR_CODE, code);
        super.put(MESSAGE, msg);
    }

    public Response(String code, String msg, Object data) {
        super.put(ERROR_CODE, code);
        super.put(MESSAGE, msg);
        super.put(DATA, data);
    }

    public Response(JSONObject jsonObject) {
        super.put(ERROR_CODE, jsonObject.getString(ERROR_CODE));
        super.put(MESSAGE, jsonObject.getString(MESSAGE));
        super.put(DATA, jsonObject.getString(DATA));
    }

    public static Response success() {
        return new Response(ResponseEnum.SUCCESS);
    }

    public static Response success(Object data) {
        return success().put(DATA, data);
    }

    public static Response error() {
        return new Response(ResponseEnum.ERROR);
    }

    public static Response error(Object data) {
        return new Response(ResponseEnum.ERROR.getCode(), data.toString(), data);
    }

    public static Response error(String msg, Object data) {
        return new Response(ResponseEnum.ERROR.getCode(), msg, data);
    }

    public static Response required(String msg) {
        return new Response(ResponseEnum.REQUIRED.getCode(), msg);
    }

    public static Response authError(String msg) {
        return new Response(ResponseEnum.AUTH_ERROR.getCode(), msg);
    }

    public String getCode() {
        return (String) this.get(ERROR_CODE);
    }

    public String getMsg() {
        return (String) this.get(MESSAGE);
    }

    public Boolean isSuccess() {
        return this.get(ERROR_CODE).equals(ResponseEnum.SUCCESS.getCode());
    }

    @Override
    public Response put(String key, Object value) {
        if (value != null) {
            super.put(key, value);
        }
        return this;
    }
}