// code generated by gen_code_tool. DO NOT EDIT.

package controller

import (
	"context"

	"screen/api/v1/model"
	"screen/internal/logic"
)

type Screen struct {
	BaseController
}

func (c Screen) List(ctx context.Context, req *model.IndicesListReq) (*model.IndicesListRes, error) {
	if result, err := logic.Screen.List(ctx, req); err != nil {
		return nil, err
	} else {
		return &result, nil
	}
}

func (c Screen) Map(ctx context.Context, req *model.IndicesMapReq) (*model.IndicesMapRes, error) {
	if result, err := logic.Screen.Map(ctx, req); err != nil {
		return nil, err
	} else {
		return &result, nil
	}
}

func (c Screen) StudentsEnroll(ctx context.Context, req *model.StudentsEnrollReq) (*model.StudentsEnrollRes, error) {
	if result, err := logic.Screen.StudentsEnroll(ctx); err != nil {
		return nil, err
	} else {
		return result, nil
	}
}

func (c Screen) SubjectConstruction(ctx context.Context, req *model.SubjectConstructionReq) (model.SubjectConstructionRes, error) {
	if result, err := logic.Screen.SubjectConstruction(ctx); err != nil {
		return nil, err
	} else {
		return result, nil
	}
}

func (c Screen) LatestUpdateTime(ctx context.Context, req *model.LatestUpdateTimeReq) (model.LatestUpdateTimeRes, error) {
	if result, err := logic.Screen.LatestUpdateTime(ctx); err != nil {
		return "", err
	} else {
		return result, nil
	}
}
