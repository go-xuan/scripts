<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quan.mapper.{{UpperCamel}}Mapper">
    <sql id="query_sql">
		{{SelectSql}}
    </sql>

    <sql id="where_sql">
        <where>
            <if test="query.startTime != null"> and createTime >= #{query.startTime}</if>
            <if test="query.endTime != null"> and createTime <![CDATA[ <= ]]> #{query.endTime}</if>
            <if test="query.keyword != null and query.keyword != ''">
                and name like concat('%', #{query.keyword} ,'%')
            </if>
        </where>
    </sql>

    <sql id="order_sql">
        <choose>
            <when test="query.orderBy != null and query.orderBy.size > 0">
                <foreach collection="query.orderBy" item="order" open="order by " separator="," close="">
                    ${order.column} ${order.type}
                </foreach>
            </when>
            <otherwise>
                order by createTime
            </otherwise>
        </choose>
    </sql>

    <select id="page" resultType="com.quan.model.entity.{{UpperCamel}}">
        select * from ( <include refid="query_sql"/> ) t
        <include refid="where_sql"/>
        <include refid="order_sql"/>
        <if test="query.limit != null and query.offset != null">
            limit #{query.limit} offset #{query.offset}
        </if>
    </select>

    <select id="count" resultType="java.lang.Long">
        select count(1) from ( <include refid="query_sql"/> ) t <include refid="where_sql"/>
    </select>

    <insert id="create">
		{{InsertSql}}
    </insert>

    <update id="update">
		{{UpdateSql}}
    </update>

    <delete id="deleteByIds">
        delete from {{ID}} where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

</mapper>